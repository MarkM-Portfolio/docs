/*
 * Do not translate 'result' field of Arguments, like 
 * 	result : 1
 * 	result : "TRUE"
 * 	result : "\"ug\""
 * Do not translate formula error code like #NAME?, #NULL!, they all starts with #
 * 
 * */
({
	titleDialog: "Всички формули",
	LABEL_FORMULA_LIST: "Списък с формули:",
	formula:{
	ABS:{	
	    Syntax:"${0}(число)",
	    Disp:"Връща абсолютна стойност на число."
    },
    ACOS:{
    	Syntax:"${0}(число)",
    	Disp:"Връща аркускосинус на число. Ъгълът се връща в радиани."
    },
    ACOSH:{
    	Syntax:"${0}(число)",
    	Disp:"Връща обратния хиперболичен косинус на число."
    },
    ACOT:{    
    	Syntax:"${0}(число)",
        Disp:"Връща обратен котангенс от число. Ъгълът се измерва в радиани."
    },
    ACOTH:{    
    	Syntax:"${0}(число)",
        Disp:"Връща обратен хиперболичен котангенс от число."
    },
    ADDRESS:{
         Syntax:"${0}(ред${1} колона${1} [abs]${1} [a1]${1} [лист])",
         Disp:"Връща споменаването в клетка като текст.",
         Arguments: {
        	 2 : [{
        		 label : "${0} - Абсолютен",
        		 result : 1
        	 }, {
        		 label : "${0} - Абсолютен ред / Относителна колона",
        		 result : 2
        	 }, {
        		 label : "${0} - Относителен ред / Абсолютна колона",
        		 result : 3
        	 }, {
        		 label : "${0} - Относителен",
        		 result : 4
        	 }
        	 ],
        	 
        	 3 : [{
        		 label : "${0} - R1C1 стил",
        		 result : 0
        	 }, {
        		 label: "${0} - A1 стил",
        		 result : 1
        	 }
        	 ]
         }
    },
    AND:{    
    	Syntax:"${0}(логическа стойност 1${1} [логическа стойност 2]${1} ...)",
    	Disp:"Връща TRUE, ако всички аргументи са TRUE."
    },
    ASIN:{
    	Syntax:"${0}(число)",
    	Disp:"Връща аркуссинус на число. Ъгълът се връща в радиани."
    },
    ASINH:{
    	Syntax:"${0}(число)",
    	Disp:"Връща обратния хиперболичен синус на число."
    },
    ATAN:{
    	Syntax:"${0}(число)",
    	Disp:"Връща аркустангенс на число. Ъгълът се връща в радиани."
    },
    AVERAGE:{    
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща средна стойност на аргументите."
    },
    AVERAGEA:{    
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща средна стойност за образец. Текстът е оценен като нула."
    },
    AVERAGEIF:{    
    	Syntax:"${0}(диапазон${1} критерии${1} [среден_диапазон])",
    	Disp:"Връща средна стойност (средноаритметична стойност) от аргументите, които отговарят на даденото условие."
    },
    AVERAGEIFS:{    
    	Syntax: "${0}(среден_диапазон${1} критерии_диапазон1${1} критерии1${1} ...)",
    	Disp:"Връща средна стойност (средноаритметична стойност) от аргументите, които отговарят на даденото условие."
    },
    ATAN2:{
    	Syntax:"${0}(x_num${1} y_num)",
    	Disp:"Връща аркустангенс или обратен тангенс на указани x- и y-координати. Аркустангенсът е ъгълът от x оста до линия, съдържаща произхода (0, 0) и точка с координати (x_num, y_num)."
    },
    ATANH:{
    	Syntax:"${0}(число)",
    	Disp:"Връща обратния хиперболичен тангенс на число. Числото трябва да е между -1 и 1 (с изключение на -1 и 1)."
    },
    BASE:{    
    	Syntax:"${0}(число${1} radix${1} [минимална дължина])",
    	Disp:"Преобразува положително цяло число в текст от числова система до определената основа."
    },
    BIN2DEC:{
    	Syntax:"${0}(число)",
    	Disp:"Преобразува двоично число в десетично число."
    }, 
    BIN2HEX:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува двоично число в шестнадесетично число."
    }, 
    BIN2OCT:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува двоично число в осмично число."
    },
    CEILING:{  
    	Syntax: "${0}(число${1} инкремент)",
    	Disp:"Закръгля числото до най-близкото цяло число или множество от значимост."
    },
    CHAR: {
    	Syntax: "${0}(число)",
    	Disp: "Връща символ, очертан от числото. Намира символа в Unicode схема на символи. Числото е между 1 и 255."
    },
    CHOOSE: {
    	Syntax: "${0}(индекс${1} стойност1${1} [стойност2]${1} ...)",
    	Disp: "Намира и връща съответстващата стойност съгласно индекса. Може да ИЗБЕРЕ от до 30 стойности."
    },
    CODE:{
    	Syntax:"${0}(текст)",
    	Disp:"Връща числов код за първия символ в текстов низ,който е кодиран в unicode"
    },
    COLUMN:{    
    	Syntax:"${0}([референция])",
    	Disp:"Връща вътрешния брой колони на споменаване."
    },
    COLUMNS:{    
    	Syntax:"${0}(масив)",
    	Disp:"Връща броя колони в масив или споменаване."
    },
    COMBIN:{
    	Syntax:"${0}(число${1} избрано_число)",
    	Disp:"Връща брой на комбинации за даден брой елементи. Използвайте ${0}, за да определите общия възможен брой групи за даден брой елементи."
    },
    CONCATENATE:{   
    	Syntax:"${0}(текст 1${1} ...)",
    	Disp:"Комбинира няколко текстови низа в един низ."
    },
    CONVERT:{
    	Syntax:"${0}(число${1} от_единица${1} до_единица)",
    	Disp:"Преобразува число от една измервателна система в друга.",
    	Arguments: {
       	 1 : [{
       		 label : "${0} - грам",
       		 result : "\"g\""
       	 }, {
       		 label : "${0} - Слъг",
       		 result : "\"sg\""
       	 }, {
       		 label : "${0} - фунт маса (avoirdupois)",
       		 result : "\"lbm\""
       	 }, {
       		 label : "${0} - U (единица за атомна маса)",
       		 result : "\"u\""
       	 }, {
       		 label : "${0} - унция маса (avoirdupois)",
       		 result : "\"ozm\""
       	 }, {
       		 label : "${0} - метър",
       		 result : "\"m\""
       	 }, {
       		 label : "${0} - статутна миля",
       		 result : "\"mi\""
       	 }, {
       		 label : "${0} - инч",
       		 result : "\"in\""
       	 }, {
       		 label : "${0} - фут",
       		 result : "\"ft\""
       	 }, {
       		 label : "${0} - ярд",
       		 result : "\"yd\""
       	 }, {
       		 label : "${0} - ангстрьом",
       		 result : "\"ang\""
       	 }, {
       		 label : "${0} - пайк",
       		 result : "\"pica\""
       	 }, {
       		 label : "${0} - година",
       		 result : "\"yr\""
       	 }, {
       		 label : "${0} - ден",
       		 result : "\"day\""
       	 }, {
       		 label : "${0} - час",
       		 result : "\"hr\""
       	 }, {
       		 label : "${0} - минута",
       		 result : "\"mn\""
       	 }, {
       		 label : "${0} - секунда",
       		 result : "\"sec\""
       	 }, {
       		 label : "${0} - паскал",
       		 result : "\"Pa\""
       	 }, {
       		 label : "${0} - атмосфера",
       		 result : "\"atm\""
       	 }, {
       		 label : "${0} - милиметър живачен стълб (Torr)",
       		 result : "\"mmHg\""
       	 }, {
       		 label : "${0} - нютон",
       		 result : "\"N\""
       	 }, {
       		 label : "${0} - дина",
       		 result : "\"dyn\""
       	 }, {
       		 label : "${0} - фунт сила",
       		 result : "\"lbf\""
       	 }, {
       		 label : "${0} - джаул",
       		 result : "\"J\""
       	 }, {
       		 label : "${0} - ерг",
       		 result : "\"e\""
       	 }, {
       		 label : "${0} - IT калория",
       		 result : "\"cal\""
       	 }, {
       		 label : "${0} - електронволт",
       		 result : "\"eV\""
       	 }, {
       		 label : "${0} - конски сили-час",
       		 result : "\"HPh\""
       	 }, {
       		 label : "${0} - вата-час",
       		 result : "\"Wh\""
       	 }, {
       		 label : "${0} - фут-фунт",
       		 result : "\"flb\""
       	 }, {
       		 label : "${0} - Британска топлинна единица",
       		 result : "\"BTU\""
       	 }, {
       		 label : "${0} - термодинамична калория",
       		 result : "\"c\""
       	 }, {
       		 label : "${0} - конски сили",
       		 result : "\"HP\""
       	 }, {
       		 label : "${0} - ват",
       		 result : "\"W\""
       	 }, {
       		 label : "${0} - тесла",
       		 result : "\"T\""
       	 }, {
       		 label : "${0} - гаус",
       		 result : "\"ga\""
       	 }, {
       		 label : "${0} - градус по Целзий",
       		 result : "\"C\""
       	 }, {
       		 label : "${0} - градус по Фаренхайт",
       		 result : "\"F\""
       	 }, {
       		 label : "${0} - киловатчас",
       		 result : "\"K\""
       	 }, {
       		 label : "${0} - чаена лъжичка",
       		 result : "\"tsp\""
       	 }, {
       		 label : "${0} - супена лъжица",
       		 result : "\"tbs\""
       	 }, {
       		 label : "${0} - унция течност",
       		 result : "\"oz\""
       	 }, {
       		 label : "${0} - чаша",
       		 result : "\"cup\""
       	 }, {
       		 label : "${0} - американска пинта",
       		 result : "\"us_pt\""
       	 }, {
       		 label : "${0} - великобританска пинта",
       		 result : "\"uk_pt\""
       	 }, {
       		 label : "${0} - кварта",
       		 result : "\"qt\""
       	 }, {
       		 label : "${0} - галон",
       		 result : "\"gal\""
       	 }, {
       		 label : "${0} - литър",
       		 result : "\"I\""
       	 }
       	 ],
       	 2 : 1	//SAME WITH 2
        }
    },
    COS:{
    	Syntax:"${0}(число)",
    	Disp:"Връща косинус на дадения ъгъл."
    },
    COSH:{
    	Syntax:"${0}(число)",
    	Disp:"Връща хиперболичен косинус на число."
    },
    COT:{    
    	Syntax:"${0}(число)",
        Disp:"Връща котангенс от даденото число."
    },
    COTH:{    
    	Syntax:"${0}(число)",
        Disp:"Връща хиперболичен котангенс от даденото число."
    },
    COUNT:{   
    	Syntax:"${0}(стойност1${1} [стойност2]${1} ...)",
    	Disp:"Изброява колко числа се намират в списъка с аргументи. Текстовите записи се игнорират."
    },
    COUNTA:{   
    	Syntax:"${0}(стойност1${1} [стойност2]${1} ...)",
    	Disp:"Изброява колко стойности се намират в списъка с аргументи."
    },
    COUNTBLANK:{   
    	Syntax:"${0}(диапазон)",
    	Disp: "Изброява празните клетки в указан диапазон."
    },
    COUNTIF:{
    	Syntax: "${0}(диапазон${1} критерии)",
    	Disp:"Изброява броя на клетките, които отговарят на даденото условие."
    },
    COUNTIFS:{
    	Syntax: "${0}(диапазон_критерии1${1} критерии1${1} ...)",
    	Disp:"Изброява броя на клетките, които отговарят на множество условия."
    },
    CUMIPMT:{	
	    Syntax:"${0}(процент${1} nper${1} pv${1} начален_период${1} краен_период${1} тип)",
	    Disp:"Изчислява кумулативния лихвен процент, изплатен между посочените два периода."
    },
    CUMPRINC:{	
	    Syntax:"${0}(процент${1} nper${1} pv${1} начален_период${1} краен_период${1} тип)",
	    Disp:"Изчислява кумулативната главница, изплатена относно кредита, между посочените два периода."
    }, 
    DATE:{	
	    Syntax:"${0}(година${1} месец${1} ден)",
	    Disp:"Предоставя вътрешен номер за дадената дата."
    },  
    DATEDIF:{	
	    Syntax:"${0}(начална дата${1} крайна дата${1} формат)",
	    Disp:"Връща разликата в години, месеци или дни между две дати.",
	    Arguments: {
	    	2 : [{
	    		label: "${0} - Броят пълни години в периода.",
	    		result: "\"Y\""
	    	}, {
	    		label: "${0} - Броят пълни месеци в периода.",
	    		result: "\"M\""
	    	}, {
	    		label: "${0} - Броят дни в периода.",
	    		result: "\"D\""
	    	}, {
	    		label: "${0} - Брой дни между начална_дата и крайна_дата, като се игнорират месеци и години.",
	    		result: "\"MD\""
	    	}, {
	    		label: "${0} - Брой месеци между начална_дата и крайна_дата, като се игнорират години.",
	    		result: "\"YM\""
	    	}, {
	    		label: "${0} - Брой дни между начална_дата и крайна_дата, като се игнорират години.",
	    		result: "\"YD\""
	    	}
	    	]
	    }
    },  
    DATEVALUE:{	
	    Syntax:"${0}(текст)",
	    Disp:"Връща вътрешен номер за текст, имащ вероятен формат на дата."
    }, 
    DAY:{
    	Syntax:"${0}(число)",
    	Disp:"Връща деня на дадената стойност за дата. Денят се връща като цяло число между 1 и 31. Можете също така да въведете отрицателна стойност за дата/час."
    },
    DAYS360:{
    	Syntax:"${0}(начална_дата${1} крайна_дата${1} [метод])",
    	Disp:"Изчислява броя дни между две дати, на базата на година с 360 дни.",
    	Arguments: {
       	 2 : [{
       		 label : "${0} - американски (NASD) метод",
       		 result : "НЕВЯРНО"
       	 }, {
       		 label : "${0} - европейски метод",
       		 result : "ВЯРНО"
       	 }
       	 ]
        }
    },
    DAYS:{
    	Syntax:"${0}(начална_дата${1} крайна_дата${1})",
    	Disp:"Изчислява броя дни между две дати."
    },
    DEC2BIN:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува десетично число в двоично число."
    }, 
    DEC2HEX:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува десетично число в шестнадесетично число."
    },
    DEC2OCT:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува десетично число в осмично число."
    },
    DEGREES:{	
	    Syntax:"${0}(ъгъл)",
	    Disp:"Преобразува радиани в градуси."
    },
    DISC:{
    	Syntax:"${0}(сетълмънт${1} матуритет${1} pr${1} обратно изкупуване${1} [база)",
    	Disp:"Изчислява сконтовия процент на обезпечение."
    }, 
    DOLLAR:{
    	Syntax:"${0}(число${1} [десетични])",
    	Disp:"Преобразува число в текст, посредством формат на валута $ (долар)."
    },
    EDATE:{
    	Syntax:"${0}(начална дата${1} месеци)",
    	Disp:"Връща серийния номер, който представлява датата, която е посоченият брой месеци преди или след началната дата"
    },
    EOMONTH:{
    	Syntax:"${0}(начална дата${1} месеци)",
    	Disp:"Връща серийния номер за последния ден от месеца, който е посоченият брой месеци преди или след началната дата"
    },
    ERFC:{   
    	Syntax:"${0}(число)",
        Disp:"Връща допълнителна функция за грешка, интегрирана между число и безкрайност."
    },
    "ERROR.TYPE":{    
    	Syntax:"${0}(споменаване)",
    	Disp:"Връща номер, съответстващ на тип грешка."
//    		,
//    	Arguments: {
//       	 0 : [{
//       		 label : "${0} - #NULL!",
//       		 result : -1
//       	 }, {
//       		 label : "${0} - #DIV/0!",
//       		 result : -2
//       	 }, {
//       		 label : "${0} - #VALUE!",
//       		 result : -3
//       	 }, {
//       		 label : "${0} - #REF!",
//       		 result : -4
//       	 }, {
//       		 label : "${0} - #NAME?",
//       		 result : -5
//       	 }, {
//       		 label : "${0} - #NUM!",
//       		 result : -6
//       	 }, {
//       		 label : "${0} - #N/A",
//       		 result : -7
//       	 }, {
//       		 label : "${0} - #GETTING_DATA",
//       		 result : -8
//       	 }
//       	 ]
//        }
    },    
    EVEN:{   
    	Syntax:"${0}(число)",
    	Disp:"Връща число, закръглено на най-близкото равно цяло число."
    },
    EXACT:{    
    	Syntax:"${0}(текст 1${1} текст 2)",
    	Disp: "Сравнява два текстови низа и връща TRUE, ако са идентични. Тази фунцкия разпознава малки и главни букви."
    },
    EXP:{    
    	Syntax:"${0}(число)",
    	Disp: "Връща изтрито от даденото число."
    },
    FACT:{  
    	Syntax:"${0}(число)",
    	Disp:"Изчислява факториел на число."
    },
    FACTDOUBLE:{  
    	Syntax:"${0}(число)",
        Disp:"Връща двоен факториел от число."
    },
    FALSE:{
    	Syntax:"${0}()",
    	Disp:"Връща логическа стойност като FALSE."
    },
    FIND:{   
    	Syntax:"${0}(намиране на текст${1} текст${1} [позиция])",
    	Disp:"Търси низ на текст в друг (разпознава малки и главни букви)."
    },
    FIXED:{
    	Syntax:"${0}(число${1} [десетични]${1} [без_запетаи])",
    	Disp:"Форматира число като текст с фиксиран брой десетични.",
    	Arguments: {
    		2 : [{
    			label : "${0} - премахва запетаи",
    			result : "ВЯРНО"
    		}, {
    			label : "${0} - не премахва запетаи",
    			result: "НЕВЯРНО" 
    		}
    		]
    	}
    },
    FLOOR:{   
    	Syntax:"${0}(число${1} важност)",
    	Disp:"Закръгля числото надолу до най-близкото множество от значимост."
    },
    FORMULA:{   
    	Syntax:"${0}(споменаване)",
    	Disp:"Връща формулата на клетка с формула."
    },
    FREQUENCY:{   
    	Syntax:"${0}(NumberSequenceList_data${1} NumberSequenceList_bins)",
    	Disp:"Категоризира стойности в интервали и изброява броя на стойностите във всеки интервал."
    },
    FV:{
    	Syntax:"${0}(процент${1} nper${1} pmt${1} [pv]${1} [тип)",
    	Disp:"Изчислява бъдещата стойност на инвестиция на базата на постоянен лихвен процент."
    },
    FVSCHEDULE:{    
    	Syntax:"${0}(главница${1} график)",
        Disp:"Изчислява бъдещата стойност на първоначална главница, след прилагането на серия от съставни лихвени проценти."
    },
    GAMMALN:{   
    	Syntax:"${0}(число)",
        Disp:"Връща естествен логаритъм от гама функция."
    },
    GCD:{   
    	Syntax:"${0}(число1${1} [число 2]${1} ...)",
        Disp:"Връща най-големия общ делител от всички аргументи."
    },
    HEX2BIN:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува шестнадесетично число в двоично число."
    }, 
    HEX2DEC:{
    	Syntax:"${0}(число)",
    	Disp:"Преобразува шестнадесетично число в десетично число."
    }, 
    HEX2OCT:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува шестнадесетично число в осмично число."
    },
    HOUR:{   
    	Syntax:"${0}(число)",
    	Disp:"Определя поредния номер на часа от деня (0-23) за времевата стойност."
    },
    HLOOKUP:{   
    	Syntax:"${0}(търсене_критерии${1} масив${1} индекс${1} [сортиран])",
    	Disp:"Хоризонтално търсене и споменаване на клетките, разположени по-долу.",
    	Arguments: {
          	 3 : [{
          		 label : "${0} - приблизително съвпадение",
          		 result : "ВЯРНО"
          	 }, {
          		 label : "${0} - точно съвпадение",
          		 result : "НЕВЯРНО"
          	 }
          	 ]
           }
    },
    HYPERLINK:{    
    	Syntax:"${0}(връзка${1} [текст_на_клетка])",
    	Disp:"Връща връзката, която насочва към мрежов ресурс или към диапазон, посочен от връзката. Изобразява текст_на_клетка (по избор), ако е предоставен; в противен случай изобразява връзката като текст."
    },    
    IF:{    
    	Syntax:"${0}(тест${1} [тогава_стойност]${1} [в противен случай_стойност])",
    	Disp:"Указва логически тест, който трябва да се изпълни."
    },
    IFS:{
    	Syntax:"${0}(тест1${1} стойност_ако_вярно1${1} ...)",
    	Disp:"Извършва логически тестове за проверка дали едно или повече условия са спазени и връща стойност, която отговаря на първото условие TRUE."
    },
    IFERROR:{
    	Syntax:"${0}(стойност${1} стойност_ако_грешка)",
    	Disp:"Връща стойността, която указвате, ако в израза има грешка. В противен случай връща резултат от израза."
    },
    IFNA:{
    	Syntax:"${0}(стойност${1} стойност_ако_na)",
    	Disp:"Връща стойността, която указвате, ако изразът върне стойност с грешка #N/A. В противен случай връща резултат от израза."
    },
    INDEX:{    
    	Syntax:"${0}(референция${1} ред${1} [колона]${1} [диапазон])",
    	Disp:"Връща споменаване на клетка от определен диапазон."
    },
    INDIRECT:{    
    	Syntax:"${0}(реф${1} [референтен_стил])",
    	Disp:"Връща съдържанието на клетка, която е указана в текстова форма.",
    	Arguments: {
         	 1 : [{
         		 label : "${0} - R1C1 стил",
         		 result : "НЕВЯРНО"
         	 }, {
         		 label : "${0} - A1 стил",
         		 result : "ВЯРНО"
         	 }
         	 ]
          }
    }, 
    INT:{    
    	Syntax:"${0}(число)",
    	Disp:"Закръгля числото надолу до най-близкото цяло число."
    },
    IPMT:{
    	Syntax:"${0}(процент${1} за${1} nper${1} pv${1} [fv]${1} [тип])",
    	Disp:"Изчислява възвръщането на лихви за период на инвестиция, въз основа на редовни плащания и фиксиран лихвен процент."
    }, 
    ISBLANK:{   
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако споменатата клетка е празна, иначе връща FALSE."
    },
    ISERR:{
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е стойност на грешка, която не е равна на #N/A."
    },
    ISERROR:{
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е стойност на грешка."
    },
    ISEVEN:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е равна, иначе връща FALSE." 
    },
    ISFORMULA:{    
    	Syntax:"${0}(споменаване)",
    	Disp:"Връща TRUE, ако клетката е клетка с формула."
    },
    ISLOGICAL:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността носи логически номер."
    },
    ISNA:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е равна на #N/A."
    },  
    ISNONTEXT:{   
    	Syntax:"${0}(стойност)",
    	Disp:"Връща true, ако стойността не е текст."
    },
    ISNUMBER:{   
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е число."
    },
    ISODD:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е нечетно цяло число."
    },
    ISPMT:{
    	Syntax:"${0}(процент${1} за${1} nper${1} pv)",
    	Disp:"Изчислява лихвата, изплатена през посочения период, за дадена инвестиция."
    }, 
    ISREF:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е споменаване."
    },
    ISTEXT:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Връща TRUE, ако стойността е текст."
    },
    LARGE:{
        Syntax:"${0}(масив${1} nth_позиция)",
    	Disp:"Връща nth най-голямата стойност от набор стойности."
    },
    LCM:{   
    	Syntax:"${0}(число1${1} [число 2]${1} ...)",
        Disp:"Връща най-малкото общо кратно от всички числа в списъка."
    },
    LEFT:{
        Syntax:"${0}(текст${1} [дължина])",
    	Disp:"Връща указания брой символи от началото на текст."
    },
    LEN:{
    	Syntax:"${0}(текст)",
    	Disp:"Връща дължината на текстов низ."
    },
    LENB:{
    	Syntax:"${0}(текст)",
    	Disp:"Връща броя байтове на текстов низ."
    },
    LN:{
    	Syntax:"${0}(число)",
    	Disp:"Връща естествения логаритъм на число."
    },
    LOG:{
    	Syntax:"${0}(число${1} [база])",
    	Disp:"Връща логаритъма на число в указана база."
    },
    LOG10:{
    	Syntax:"${0}(число)",
    	Disp:"Връща логаритъм база-10 на число."
    },
    LOOKUP:{
    	Syntax: "${0}(критерий за търсене${1} вектор за търсене${1} [резултат_вектор])",
    	Disp:"Определя стойността във вектор чрез сравняване на стойности в друг вектор."
    },
    LOWER:{    
    	Syntax:"${0}(текст)",
    	Disp:"Преобразува текст в малки букви."
    },    
    MATCH:{    
    	Syntax: "${0}(критерий за търсене${1} търсене_масив${1} [тип])",
    	Disp:"Определя позиция в масив след сравняване на стойности.",
    	Arguments: {
         	 2 : [{
         		 label : "${0} - по-малък от",
         		 result : 1
         	 }, {
         		 label : "${0} - точно съвпадение",
         		 result : 0
         	 }, {
         		 label : "${0} - по-голям от",
         		 result : -1
         	 }
         	 ]
          }
    },
    MAX:{   
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща максималната стойност в списък с аргументи."
    },
    MEDIAN:{    
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща средна стойност, ако е даден нечетен брой стойности. В противен случай връща аритметична средна стойност на двете средни стойности."
    },
    MID:{    
    	Syntax:"${0}(текст${1} число${1} число)",
    	Disp:"Връща частичен текстов низ на текст."
    }, 
    MIN:{    
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща минималната стойност в списък с аргументи."
    },    
    MINUTE:{    
    	Syntax:"${0}(число)",
    	Disp:"Определя поредния номер за минута в час (0-59) за времевата стойност."
    },    
    MOD:{    
    	Syntax:"${0}(разделено_число${1} делител)",
    	Disp:"Връща остатъка, когато разделеното число е разделено от делителя."
    },
    MODE:{    
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Връща най-общата стойност в образец."
    },
    MONTH:{    
    	Syntax:"${0}(число)",
    	Disp:"Връща месеца за дадената стойност за дата. Месецът се връща като цяло число между 1 и 12."
    },
    MROUND:{   
    	Syntax: "${0}(число${1} кратно)",
        Disp:"Връща закръглено число до указано кратно."
    },
    MMULT:{    
    	Syntax:"${0}(масив${1} масив)",
    	Disp:"Умножение на масив. Връща продукт от два масива."
    },
    MULTINOMIAL:{   
    	Syntax:"${0}(число1${1} [число 2]${1} ...)",
        Disp:"Връща коефициент на многочлен от набор от числа."
    },
    N:{    
    	Syntax:"${0}(стойност)",
    	Disp:"Преобразува стойност в число."
    },    
    NA:{    
    	Syntax:"${0}()",
    	Disp:"Връща стойност на грешка #N/A."
    },
    NETWORKDAYS:{    
    	Syntax:"${0}(начална дата${1} крайна дата${1} [почивни дни])",
    	Disp:"Връща броя работни дни между две дати."
    },
    NOT:{    
    	Syntax:"${0}(логическа стойност)",
    	Disp:"Обръща стойността на аргумент."
    },
    NOW:{    
    	Syntax:"${0}()",
    	Disp:"Определя текущия час на компютъра."
    },
    NPV:{   
    	Syntax:"${0}(процент${1} стойност 1${1} [стойност 2]${1} ...)",
        Disp:"Изчислява нетната настояща стойност на дадена инвестиция, на базата на предоставен сконтов процент и серия бъдещи плащания и доходи."
    },
    OCT2BIN:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува осмично число в двоично число."
    },
    OCT2DEC:{
    	Syntax:"${0}(число)",
    	Disp:"Преобразува осмично число в десетично число."
    },
    OCT2HEX:{
    	Syntax:"${0}(число${1} [позиции])",
    	Disp:"Преобразува осмично число в шестнадесетично число."
    },
    ODD:{    
    	Syntax:"${0}(число)",
    	Disp:"Закръгля число до най-близкото нечетно цяло число, където \"нагоре\" означава \"далеч от 0\"."
    },
    OFFSET:{
    	Syntax:"${0}(референция${1} редове${1} колони${1} [височина]${1} [ширина])",
    	Disp:"Връща споменаване до диапазон, който е указан брой редове и колони от клетка или набор клетки."
    },
    OR:{    
    	Syntax:"${0}(логическа стойност 1${1} [логическа стойност 2]${1} ...)",
    	Disp:"Връща TRUE, ако поне един аргумент е TRUE."
    },
    PI:{    
    	Syntax:"${0}()",
    	Disp:"Връща приблизителна стойност на Pi."
    },
    PMT:{
    	Syntax:"${0}(процент${1} nper${1} pv${1} [fv]${1} [тип])",
    	Disp:"Връща плащане за заем, въз основа на редовни плащания и фиксиран лихвен процент."
    },
    POWER:{    
    	Syntax:"${0}(база${1} степен)",
    	Disp:"Увеличава число до степен на друго."
    },
    PPMT:{
    	Syntax:"${0}(процент${1} за${1} nper${1} pv${1} [fv]${1} [тип])",
    	Disp:"Изчислява възвръщането на лихви за период на инвестиция, въз основа на редовни плащания и фиксиран лихвен процент."
    },
    PRICEDISC:{
    	Syntax:"${0}(сетълмънт${1} матуритет${1} отстъпка${1} обратно изкупуване${1} [база])",
    	Disp:"Изчислява цената за $100 номинална стойност на дисконтирано обезпечение."
    },
    PRICEMAT:{
    	Syntax:"${0}(сетълмънт${1} матуритет${1} емисия${1} процент${1} доходност${1} [база])",
    	Disp:"Изчислява цената за $100 номинална стойност на обезпечение, което изплаща лихва при матуритет."
    },
    PRODUCT:{   
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Умножава всички числа, дадени като аргументи и връща продукта."
    },
    PROPER:{    
    	Syntax:"${0}(текст)",
    	Disp:"Преобразува текстов низ до подходяща буква, първата буква от всяка дума в главна буква, а всички останали букви в малки."
    },
    PV:{
    	Syntax:"${0}(процент${1} nper${1} pmt${1} [fv]${1} [тип])",
    	Disp:"Изчислява настоящата стойност на дадена инвестиция, на базата на серия от бъдещи плащания."
    }, 
    QUOTIENT:{    
    	Syntax:"${0}(числител${1} знаменател)",
        Disp:"Връща резултат от число, разделено на друго число, съкратено до цяло число."
    },
    RAND:{
    	Syntax:"${0}()",
    	Disp: "Връща случайно число между 0 и 1."
    },
    RANDBETWEEN:{    
    	Syntax:"${0}(долна част${1} горна част)",
    	Disp: "Връща случайно цяло число между числата, които сте указали."
    },
    RANK:{    
    	Syntax:"${0}(число ${1} реф${1} [ред])",
    	Disp: "Връща класирането на стойност в образец.",
    	Arguments: {
          	 2 : [{
          		 label : "${0} - низходящ",
          		 result : 0
          	 }, {
          		 label : "${0} - възходящ",
          		 result : 1
          	 }
          	 ]
           }
    },
    RECEIVED:{
    	Syntax:"${0}(сетълмънт${1} матуритет${1} инвестиция${1} отстъпка${1} [база])",
    	Disp:"Изчислява сумата, получена при матуритет на напълно инвестирано обезпечение."
    }, 
    REPLACE:{    
    	Syntax: "${0}(текст${1} позиция${1} дължина${1} нов текст)",
    	Disp:"Замества символи в текстов низ с различен текстов низ."	
    },
    REPT:{    
    	Syntax: "${0}(текст${1} брой)",
    	Disp:"Повтаря даден текст определен брой пъти."	
    },
    RIGHT:{
    	Syntax: "${0}(текст${1} [число])",
    	Disp:"Връща последния символ или символи на текст."
    },
    RIGHTB:{
    	Syntax: "${0}(текст${1} [число])",
    	Disp:"Връща последния символ или символи на текст."
    },
    ROUND:{   
    	Syntax: "${0}(число${1} брой)",
    	Disp:"Закръгля числото до предварително определена точност."
    },
    ROUNDDOWN:{   
    	Syntax: "${0}(число${1} брой)",
    	Disp:"Закръгля числото надолу до предварително определена точност."
    },
    ROUNDUP:{   
    	Syntax: "${0}(число${1} брой)",
    	Disp:"Закръгля числото нагоре до предварително определена точност."
    },
    ROW:{   
    	Syntax:"${0}([референция])",
    	Disp:"Определя вътрешния брой редове на споменаване."
    },
    ROWS:{   
    	Syntax:"${0}(масив)",
    	Disp:"Връща броя редове в масив или споменаване."
    },
    RADIANS:{   
    	Syntax:"${0}(ъгъл)",
    	Disp:"Преобразува градуси в радиани."
    },
    ROMAN:{   
    	Syntax:"${0}(число${1} [форма])",
    	Disp:"Преобразува арабска цифра в римска, като текст.",
    	Arguments: {
          	 1 : [{
          		 label : "${0} - класически",
          		 result : 0
          	 }, {
          		 label : "${0} - по-сбит",
          		 result : 1
          	 }, {
          		 label : "${0} - по-сбит",
          		 result : 2
          	 }, {
          		 label : "${0} - по-сбит",
          		 result : 3
          	 }, {
          		 label : "${0} - опростен",
          		 result : 4
          	 }
          	 ]
           }
    },
    SEARCH:{   
    	Syntax:"${0}(намиране на текст${1} текст${1} [позиция])",
    	Disp:"Търси една текстова стойност в друга (не прави разлика между малки и главни букви)."
    },  
    SIGN:{    
    	Syntax:"${0}(число)",
        Disp:"Връща алгебричен знак на число."
    },
    SIN:{    
    	Syntax:"${0}(число)",
    	Disp:"Връща синус на дадения ъгъл."
    },
    SINH:{    
    	Syntax:"${0}(число)",
    	Disp:"Връща хиперболичен синус на число."
    },
    SECOND:{    
    	Syntax:"${0}(число)",
    	Disp:"Определя поредния номер за секунда в минута (0-59) за времевата стойност."
    },
    SERIESSUM:{    
    	Syntax:"${0}(x${1} n${1} m${1} коефициенти)",
        Disp:"Връща сума от степенен ред въз основа на формулата."
    },
    SHEET:{   
    	Syntax:"${0}([референция])",
    	Disp:"Връща вътрешния брой таблици на споменаване или низ."
    },
    SMALL:{   
    	Syntax:"${0}(масив${1} nth_позиция)",
    	Disp:"Връща nth най-малката стойност от набор стойности."
    },
    SUBSTITUTE:{   
    	Syntax:"${0}(текст${1} стар${1} нов${1} [който])",
    	Disp:"Връща текст, при който стар текст е заместен с нов текст."
    },
    SUBTOTAL:{   
    	Syntax:"${0}(функция${1} диапазон${1} ...)",
    	Disp:"Изчислява междинен сбор в електронна таблица.",
    	Arguments: {
    		0 : [{
    			label : "${0} - AVERAGE",
    			result : 1
    		}, {
    			label : "${0} - COUNT",
    			result: 2
    		}, {
    			label : "${0} - COUNTA",
    			result: 3
    		}
    		, {
    			label : "${0} - MAX",
    			result: 4
    		}
    		, {
    			label : "${0} - MIN",
    			result: 5
    		}
    		, {
    			label : "${0} - PRODUCT",
    			result: 6
    		}
    		, {
    			label : "${0} - STDEV",
    			result: 7
    		}
    		, {
    			label : "${0} - STDEVP",
    			result: 8
    		}
    		, {
    			label : "${0} - SUM",
    			result: 9
    		}
    		, {
    			label : "${0} - VAR",
    			result: 10
    		}, {
    			label : "${0} - VARP",
    			result: 11
    		}, {
    			label : "${0} - AVERAGE",
    			result: 101
    		}, {
    			label : "${0} - COUNT",
    			result: 102
    		}, {
    			label : "${0} - COUNTA",
    			result: 103
    		}, {
    			label : "${0} - MAX",
    			result: 104
    		}, {
    			label : "${0} - MIN",
    			result: 105
    		}, {
    			label : "${0} - PRODUCT",
    			result: 106
    		}, {
    			label : "${0} - STDEV",
    			result: 107
    		}, {
    			label : "${0} - STDEVP",
    			result: 108
    		}, {
    			label : "${0} - SUM",
    			result: 109
    		}, {
    			label : "${0} - VAR",
    			result: 110
    		}, {
    			label : "${0} - VARP",
    			result: 111
    		}
    		]
    	}
    },
    SUM:{   
    	Syntax:"${0}(число1${1} [число 2]${1} ...)",
    	Disp:"Връща сума на всички аргументи."
    },
    SUMPRODUCT:{   
    	Syntax:"${0}(масив 1${1} [масив 2]${1} ...)",
    	Disp:"Връща сума на продуктите на аргументи в масив."
    },
    SUMIF:{   
    	Syntax:"${0}(диапазон${1} критерии${1} [диапазон на сума])",
    	Disp:"Изчислява аргументите, които отговарят на условията."
    },
    SUMIFS:{
    	Syntax: "${0}(сума_диапазон${1} критерии_диапазон1${1} критерии1${1} ...)",
    	Disp:"Събира аргументите, които отговарят на множество условия."
    },
    SQRT:{   
    	Syntax:"${0}(число)",
    	Disp:"Връща корен квадратен на число."
    },
    SQRTPI:{   
    	Syntax:"${0}(число)",
        Disp:"Връща корен квадратен от (число * pi)."
    },
    STDEV:
    {
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Изчислява стандартно отклонение въз основа на образец."
    },
    STDEVP:
    {
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
    	Disp:"Изчислява стандартно отклонение въз основа на цялото попълване."
    },
    SUMSQ:{
    	Syntax:"${0}(число 1${1} [число 2]${1} ...)",
        Disp:"Връща сбор от корени от числата в списъка."
    },
    T:{
    	Syntax:"${0}(текст)",
    	Disp:"Преобразува неговите аргументи в текст."
    },
    TAN:{    
    	Syntax:"${0}(число)",
        Disp:"Връща тангенс от даденото число."
    },
    TANH:{    
    	Syntax:"${0}(число)",
        Disp:"Връща хиперболичен тангенс от даденото число."
    },
    TBILLPRICE:{
    	Syntax:"${0}(сетълмънт${1} матуритет${1} отстъпка)",
    	Disp:"Изчислява цената за $100 номинална стойност на съкровищен бон."
    },
    TEXT:{
    	Syntax:"${0}(стойност${1} код на формат)",
    	Disp:"Преобразува стойността в текст съгласно правилата на код на формат на число и я връща."
    },
    TIME:{   
    	Syntax:"${0}(час${1} минута${1} секунда)",
    	Disp:"Определя времева стойност от данните за час, минута и секунда."
    },
    TIMEVALUE:{	
	    Syntax:"${0}(текст)",
	    Disp:"Връща вътрешен номер за текст, имащ вероятен времеви формат."
    }, 
    TODAY:{   
    	Syntax:"${0}()",
    	Disp:"Определя текущата дата на компютъра."
    },    
    TRIM:{
    	Syntax:"${0}(текст)",
    	Disp:"Премахва всички водещи и завършващи пространства. Всяка друга поредица от 2 или повече вътрешни пространства се заменя с единично пространство."
    },
    TRUE:{   
    	Syntax:"${0}()",
    	Disp:"Връща логическа стойност TRUE."
    },
    TRUNC:{   
    	Syntax:"${0}(число${1} [брой])",
    	Disp:"Подрязва десетичните места на номер."
    },
    TYPE:{   
    	Syntax:"${0}(стойност)",
    	Disp:"Определя типа данни на стойност."	
    },
    UPPER:{  
    	Syntax: "${0}(текст)",
    	Disp:"Преобразува текст в главни букви."
    },
    VALUE:{    
    	Syntax: "${0}(текст)",
    	Disp:"Преобразува текстов аргумент в номер."
    },
    VAR:{    
    	Syntax: "${0}(число1${1} [число2]${1}...)",
    	Disp:"Изчислява разлика въз основа на образец."
    },
    VARA:{    
    	Syntax: "${0}(число1${1} [число2]${1}...)",
    	Disp:"Изчислява разлика въз основа на образец, включително числа, текст и логически стойности."
    },
    VARP:{    
    	Syntax: "${0}(число1${1} [число2]${1}...)",
    	Disp:"Изчислява разлика въз основа на цялото попълване."
    },
    VARPA:{    
    	Syntax: "${0}(число1${1} [число2]${1}...)",
    	Disp:"Изчислява разлика въз основа на цялото попълване, включително числа, текст и логически стойности."
    },
    VLOOKUP:{    
    	Syntax: "${0}(критерий за търсене${1} масив${1} индекс${1} [ред на сортиране])",
    	Disp:"Вертикално търсене и споменаване на указани клетки.",
    	Arguments: {
          	 3 : [{
          		 label : "${0} - приблизително съвпадение",
          		 result : "ВЯРНО"
          	 }, {
          		 label : "${0} - точно съвпадение",
          		 result : "НЕВЯРНО"
          	 }
          	 ]
           }
    },
    WEEKDAY:{    
    	Syntax:"${0}(число${1} [тип])",
    	Disp:"Връща деня на седмицата за стойност за дата като цяло число.",
    	Arguments: {
          	 1 : [{
          		 label : "${0} - числа от 1 (неделя) до 7 (събота)",
          		 result : 1
          	 }, {
          		 label : "${0} - числа от 1 (понеделник) до 7 (неделя)",
          		 result : 2
          	 }, {
          		 label : "${0} - числа от 0 (понеделник) до 6 (неделя)",
          		 result : 3
          	 }
          	, {
         		 label : "${0} - числа от 1 (понеделник) до 7 (неделя)",
         		 result : 11
         	 }
          	, {
         		 label : "${0} - числа от 1 (вторник) до 7 (понеделник)",
         		 result : 12
         	 }
          	, {
         		 label : "${0} - числа от 1 (сряда) до 7 (вторник)",
         		 result : 13
         	 }
          	, {
         		 label : "${0} - числа от 1 (четвъртък) до 7 (сряда)",
         		 result : 14
         	 }
          	, {
         		 label : "${0} - числа от 1 (петък) до 7 (четвъртък)",
         		 result : 15
         	 }
          	, {
         		 label : "${0} - числа от 1 (събота) до 7 (петък)",
         		 result : 16
         	 }
          	, {
         		 label : "${0} - числа от 1 (неделя) до 7 (събота)",
         		 result : 17
         	 }
          	 ]
           }
    },
    WEEKNUM:{    
    	Syntax:"${0}(число${1} [режим])",
    	Disp:"Изчислява календарната седмица, съответстваща на дадената дата.",
    	Arguments: {
          	 1 : [{
          		 label : "${0} - неделя",
          		 result : 1
          	 }, {
          		 label : "${0} - понеделник",
          		 result : 2
          		 /*
          	 }, {
          		 label : "${0} - Monday",
          		 result : 11
          	 }, {
          		 label : "${0} - Tuesday",
          		 result : 12
          	 }, {
          		 label : "${0} - Wednesday",
          		 result : 13
          	 }, {
          		 label : "${0} - Thursday",
          		 result : 14
          	 }, {
          		 label : "${0} - Friday",
          		 result : 15
          	 }, {
          		 label : "${0} - Saturday",
          		 result : 16
          	 }, {
          		 label : "${0} - Sunday",
          		 result : 17
          	 }, {
          		 label : "${0} - Monday",
          		 result : 21
          		 */
          	 }
          	 ]
           }
    },
    WORKDAY:{    
    	Syntax:"${0}(начална дата${1} дни${1} [почивни дни])",
    	Disp:"Връща серийния номер на датата преди или след указан брой работни дни."
    },
    XNPV:{   
    	Syntax:"${0}(процент${1} стойности${1} дати)",
    	Disp:"Изчислява нетната настояща стойност за график на паричните потоци."
    },
    YEAR:{    
    	Syntax:"${0}(число)",
    	Disp:"Връща годината на стойност за дата като цяло число."
    }
}
})


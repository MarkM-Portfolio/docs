<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>com.ibm.rcp.spellcheck.webapp</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	
	<servlet id="bridge">
		<servlet-name>equinoxbridgeservlet</servlet-name>
		<servlet-class>org.eclipse.equinox.servletbridge.BridgeServlet</servlet-class>
		<init-param>
			<param-name>commandline</param-name>
			<param-value>-console</param-value>			
		</init-param>		
		<init-param>
			<param-name>enableFrameworkControls</param-name>
			<param-value>false</param-value>			
		</init-param>
		<!--
		  org.eclipse.equinox.servletbridge and the Servlet API are exported automatically to the underlying OSGi framework.
		  The extendedFrameworkExports parameter allows the specification of additional java package exports.
		  The format is a comma separated list of exports as specified by the "Export-Package" bundle manifest header.
		  For example: com.mycompany.exports; version=1.0.0, com.mycompany.otherexports; version=1.0.0
		  -->
		<init-param>
			<param-name>extendedFrameworkExports</param-name>
			<param-value></param-value>			
		</init-param>

		<!-- 
		  You can specify your own framework launcher here.
		  The default is: org.eclipse.equinox.servletbridge.FrameworkLauncher
		-->
		<init-param>
			<param-name>frameworkLauncherClass</param-name>
			<param-value>com.ibm.rcp.spellcheck.webapp.framework.SpellCheckFrameworkLauncher</param-value>
		</init-param>	
				
		<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>equinoxbridgeservlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
	<!--
	  This is required if your application bundles expose JSPs. 
	-->	
  <servlet-mapping>
		<servlet-name>equinoxbridgeservlet</servlet-name>
		<url-pattern>*.jsp</url-pattern>
  </servlet-mapping>
  <security-constraint>
  	<display-name>SpellRestService</display-name>
  	<web-resource-collection>
  		<web-resource-name>SpellService</web-resource-name>
  		<url-pattern>/rest/*</url-pattern>
  		<http-method>GET</http-method>
  		<http-method>PUT</http-method>
  		<http-method>HEAD</http-method>
  		<http-method>TRACE</http-method>
  		<http-method>POST</http-method>
  		<http-method>DELETE</http-method>
  		<http-method>OPTIONS</http-method>
  	</web-resource-collection>
  	<auth-constraint>
  		<description>
  		Authorized user of Lotus Live Symphony</description>
  		<role-name>LLSymphonyUser</role-name>
  	</auth-constraint>
  </security-constraint>
  <security-role>
  	<description>
  	LLSymphonyUserAuth</description>
  	<role-name>LLSymphonyUser</role-name>
  </security-role>
</web-app>

#!/bin/bash  

# Load the patch utility functions
export PATCH_HOME=$(pwd)

# Get server host name
hostName=$(hostname)
i=`expr index "$hostName" '.'`
hostNameShort=${hostName:0:$i-1}
    
# 
# Process and validate the command line options
#
export PATCH_IS_ROLLBACK="false"

while [[ $# > 0 ]]; do
    key="$1"
    case $key in
        --rollback|-r)
            PATCH_IS_ROLLBACK="true"
            ;;
        *)
            echo "Error: Unrecognized option."
            usage
            exit 1
            ;;
    esac
    shift
done

# 1 permission change
chown -R websphere:websphere "${PATCH_HOME}"
rc=$?
if [ "$rc" -ne "0" ]; then
    echo "Error: Failed to change ownership websphere on script and patched file in path $PATCH_HOME"
    exit 1
fi

chmod -R 755 "${PATCH_HOME}"
rc=$?
if [ "$rc" -ne "0" ]; then
    echo "Error: Failed to change permissions to 755 on script and patched file $PATCH_HOME"
    exit 1
fi

            
# 2 Update concord_config.json and update required ear
if [[ "${PATCH_IS_ROLLBACK}" == "true" ]]; then
    echo "Rollback change now and it will take a few minutes..."
    rollback_cmd="python rollbackVNChange.py"
    echo $rollback_cmd
    rollback_result=$(python rollbackVNChange.py)
    echo "${rollback_result}"
    if [[ ${rollback_result} == *"SUCCESS"* ]]; then
        echo "Successfully rollback patch."
    else
        echo "Error: Failed rollback patch."
        cd "${PWD}"
        exit 1
    fi
else
    echo "Apply patch now and it will take a few minutes..."
    patch_cmd="python applyVNPatch.py"
    echo $patch_cmd
    patch_result=$(python applyVNPatch.py)
    echo "${patch_result}"
    if [[ ${patch_result} == *"Installation complete"* ]]; then
        echo "Successfully apply patch for ($hostNameShort)"
    else
        echo "Error: Failed apply patch for ($hostNameShort)"
        cd "${PWD}"
        exit 1
    fi
fi

exit 0
